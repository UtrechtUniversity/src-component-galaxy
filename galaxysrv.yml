- name: Install Galaxy Server
  hosts: "{{ lookup('env', 'variable_host') | default('localhost', true) }}" # workaround because SRC needs localhost, but molecule needs specifc hostvars
  vars:
    _galaxy_remote_user_maildomain: "src.surf-hosted.nl"
  
  pre_tasks:
    - name: Gather CO info facts
      ansible.builtin.include_role: {name: fact_workspace_info }
      tags: molecule-notest

    - name: Set co admin user for test
      ansible.builtin.set_fact:
        fact_co_groups:
          src_co_admin: ['testuser']
      when: "'molecule-notest' in ansible_skip_tags"

    - name: Set admins
      ansible.builtin.set_fact:
        _galaxy_admins: "{{ fact_co_groups['src_co_admin'] | product(['@' ~ _galaxy_remote_user_maildomain]) | map('join') | list | join(',') }}"

    - name: Load variables
      ansible.builtin.include_vars: vars/defaults.yml

    - name: Install Dependencies
      ansible.builtin.apt:
        update_cache: true
        name:
          - 'git'
          - 'python3-psycopg2'
          - 'python3-venv'
          - 'python3-dev'
          - 'gcc'
          - 'acl'
          - 'gnutls-bin' # workaround for git-clone issue, https://stackoverflow.com/a/53147659/4326632
        state: present

    - name: Set Galaxy socket upstream definition
      tags: molecule-notest
      block:

      - name: Find Galaxy socket upstream definition
        ansible.builtin.lineinfile:
          path: /etc/nginx/conf.d/ssl_main.conf
          state: absent
          line: "upstream galaxy { server {{ galaxy_config.gravity.gunicorn.bind }}; }"
        check_mode: true
        changed_when: false
        register: detect_nginx_upstream

      - name: Add Galaxy socket upstream definition
        ansible.builtin.lineinfile:
          path: /etc/nginx/conf.d/ssl_main.conf
          insertafter: EOF
          line: "upstream galaxy { server {{ galaxy_config.gravity.gunicorn.bind }}; }"
        when: detect_nginx_upstream.found == 0

  tasks:

    - name: Workaround to install requirements.yml on SURF ResearchCloud
      ansible.builtin.include_role: { name: install_roles }
      tags: molecule-notest

    - name: Include role installed using install_roles workaround
      ansible.builtin.include_role: { name: galaxyproject.postgresql }

    - name: Include role installed using install_roles workaround
      ansible.builtin.include_role:
        name: galaxyproject.postgresql_objects
        apply:
          become: true
          become_user: postgres
  
    - name: Include role installed using install_roles workaround
      ansible.builtin.include_role: { name: galaxyproject.galaxy }

    - name: Add nginx user to galaxy group
      user:
        name: www-data
        groups: "{{ galaxy_user }}"
        append: true
      tags: molecule-notest
      notify: restart nginx
  
  # post_tasks:

  #   - name: Get Galaxy service Status
  #     ansible.builtin.systemd:
  #       name: "galaxy.target"
  #     check_mode: true
  #     register: galaxy_status

  #   - name: Galaxy gravity start
  #     command: "/usr/local/bin/galaxyctl start"
  #     when: "galaxy_status.status.ActiveState == 'inactive'"

  roles:
    - role: nginx-reverse_proxy
      tags: molecule-notest
      vars:
        nginx_reverse_proxy_locations:
          - name: galaxy
            location: /
            backend: http://galaxy
            auth: sram
          - name: static
            location: /static
            alias: "{{ galaxy_server_dir }}/static"
            auth: noauth
          - name: static_plugins
            location: "~ ^/plugins/(?<plug_type>.+?)/(?<vis_name>.+?)/static/(?<static_file>.*?)$"
            expires: '24'
            auth: noauth

  handlers:

    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      listen: restart nginx
