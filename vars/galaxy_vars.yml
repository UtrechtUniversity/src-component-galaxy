# Variables for the galaxyproject.galaxy role
galaxy_config_style: yaml
galaxy_layout: custom
galaxy_server_dir: "{{ _galaxy_root }}/server"
galaxy_root: "{{ galaxy_server_dir }}" # workaround https://github.com/galaxyproject/ansible-galaxy/issues/138
galaxy_manage_systemd: false
galaxy_venv_dir: "{{ _galaxy_root }}/venv"
galaxy_config_dir: "{{ _galaxy_root }}/config"
galaxy_mutable_data_dir: "{{ src_galaxy_storage_path | default(_galaxy_root+'/datadir', true) }}" # component variable src_galaxy_storage_path
galaxy_commit_id: "release_{{ src_galaxy_version | default('23.2', true) }}" # component variable src_galaxy_version
galaxy_separate_privileges: true
galaxy_create_user: true
galaxy_manage_paths: true
galaxy_clone_depth: 1
galaxy_user: galaxy
galaxy_privsep_user: gxpriv
galaxy_group: galaxy
galaxy_client_use_prebuilt: true
galaxy_systemd_root: true
galaxy_backup_configfiles: false
galaxy_config_files:
  - src: files/galaxy/config/tool_conf.xml
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
galaxy_config_templates:
  - src: templates/galaxy/config/user_preferences_extra_conf.yml.j2
    dest: "{{ galaxy_config_dir }}/user_preferences_extra_conf.yml"
  - src: templates/galaxy/config/job_conf.xml.j2
    dest: "{{ galaxy_config_dir }}/job_conf.xml"
  - src: templates/galaxy/config/pulsar_app.yml.j2
    dest: "{{ galaxy_config_dir }}/pulsar_app.yml"
postgresql_objects_users:
  - name: galaxy
    password: null
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy
galaxy_configuration:
  galaxy:
    use_remote_user: true
    allow_user_creation: true
    allow_user_deletion: true
    admin_users: "{{ _galaxy_admins }}"
    remote_user_maildomain: "{{ _galaxy_remote_user_maildomain }}"
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    file_path: "{{ galaxy_mutable_data_dir }}/datasets"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    tool_config_file: "{{ galaxy_config_dir }}/tool_conf.xml"
    user_preferences_extra_conf_path: "{{ galaxy_config_dir }}/user_preferences_extra_conf.yml"
    interactivetools_enable: "{{ _galaxy_use_interactive_tools }}"
    interactivetools_map: "{{ _galaxy_use_interactive_tools | ternary(gie_proxy_sessions_path, omit) }}"
    galaxy_infrastructure_url: "{{ _galaxy_local_address }}"
    outputs_to_working_directory: "{{ _galaxy_use_interactive_tools }}"
    bootstrap_admin_api_key: "{{ _galaxy_bootstrap_api_key | default(omit) }}"
  gravity:
    galaxy_root: "{{ galaxy_server_dir }}"
    galaxy_user: "{{ galaxy_user }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    process_manager: systemd
    gunicorn:
      # listening options
      bind: "{{ _galaxy_local_address }}"
      # performance options
      workers: 2
      # Other options that will be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      extra_args: '--forwarded-allow-ips="*"'
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true
    celery:
      concurrency: 2
      enable_beat: true
      enable: true
      queues: celery,galaxy.internal,galaxy.external
      pool: threads
      memory_limit: 2
      loglevel: DEBUG
    handlers:
      handler:
        processes: 4
        pools:
          - job-handlers
          - workflow-schedulers
    gx_it_proxy:
      enable: "{{ _galaxy_use_interactive_tools }}"
      port: "{{ gie_proxy_port }}"
